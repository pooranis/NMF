% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NMFfit-class.R
\docType{class}
\name{NMFfit-class}
\alias{NMFfit-class}
\alias{NMFfit}
\title{Base Class for to store Nonnegative Matrix Factorisation results}
\usage{
NMFfit(fit = nmfModel(), ..., rng = NULL)
}
\arguments{
\item{fit}{an NMF model}

\item{...}{extra argument used to initialise slots in the instantiating 
\code{NMFfit} object.}

\item{rng}{RNG settings specification (typically a suitable value for 
\code{\link{.Random.seed}}).}
}
\description{
Base class to handle the results of general \strong{Nonnegative Matrix
Factorisation} algorithms (NMF).

The function \code{NMFfit} is a factory method for NMFfit objects, that should
not need to be called by the user.
It is used internally by the functions \code{\link{nmf}} and \code{seed} to 
instantiate the starting point of NMF algorithms.
}
\details{
It provides a general structure and generic functions to manage the results
of NMF algorithms.  It contains a slot with the fitted NMF model (see slot
\code{fit}) as well as data about the methods and parameters used to compute
the factorization.

The purpose of this class is to handle in a generic way the results of NMF
algorithms. Its slot \code{fit} contains the fitted NMF model as an object
of class \code{\linkS4class{NMF}}.

Other slots contains data about how the factorization has been computed,
such as the algorithm and seeding method, the computation time, the final
residuals, etc\dots{}

Class \code{NMFfit} acts as a wrapper class for its slot \code{fit}.  It
inherits from interface class \code{\linkS4class{NMF}} defined for generic
NMF models.  Therefore, all the methods defined by this interface can be
called directly on objects of class \code{NMFfit}. The calls are simply
dispatched on slot \code{fit}, i.e.  the results are the same as if calling
the methods directly on slot \code{fit}.
}
\section{Slots}{

\describe{
\item{\code{fit}}{An object that inherits from class \code{\linkS4class{NMF}}, and 
contains the fitted NMF model.

NB: class \code{NMF} is a virtual class. The default class for this
slot is \code{NMFstd}, that implements the standard NMF model.}

\item{\code{residuals}}{A \code{numeric} vector that contains the final
residuals or the residuals track between the target matrix and its NMF
estimate(s).  Default value is \code{numeric()}.

See method \code{\link{residuals}} for details on accessor methods and main
interface \code{\link{nmf}} for details on how to compute NMF with residuals
tracking.}

\item{\code{method}}{a single \code{character} string that contains the
name of the algorithm used to fit the model. 
Default value is \code{''}.}

\item{\code{seed}}{a single \code{character} string that contains the
name of the seeding method used to seed the algorithm that fitted the NMF 
model.
Default value is \code{''}.  See \code{\link{nmf}} for more details.}

\item{\code{rng}}{an object that contains the RNG settings used for the
fit.  
Currently the settings are stored as an integer vector, the value of
\code{\link{.Random.seed}} at the time the object is created.  
It is initialized by the \code{initialized} method.  
See \code{\link{getRNG}} for more details.}

\item{\code{distance}}{either a single \code{"character"} string that
contains the name of the built-in objective function, or a \code{function}
that measures the residuals between the target matrix and its NMF estimate.
See \code{\link{objective}} and \code{\link{deviance,NMF-method}}.}

\item{\code{parameters}}{a \code{list} that contains the extra parameters
-- usually specific to the algorithm -- that were used to fit the model.}

\item{\code{runtime}}{object of class \code{"proc_time"} that contains
various measures of the time spent to fit the model.  
See \code{\link[base]{system.time}}}

\item{\code{options}}{a \code{list} that contains the options used to
compute the object.}

\item{\code{extra}}{a \code{list} that contains extra miscellaneous data
for internal usage only.  
For example it can be used to store extra parameters or temporary data, 
without the need to explicitly extend the \code{NMFfit} class. 
Currently built-in algorithms only use this slot to
store the number of iterations performed to fit the object.
  
Data that need to be easily accessible by the end-user should rather be set
using the methods \code{$<-} that sets elements in the \code{list} slot 
\code{misc} -- that is inherited from class \code{\linkS4class{NMF}}.}

\item{\code{call}}{stored call to the last \code{nmf} method that generated the
object.}
}}

\examples{
# run default NMF algorithm on a random matrix
n <- 50; r <- 3; p <- 20
V <- rmatrix(n, p)  
res <- nmf(V, r)							

# result class is NMFfit
class(res)
isNMFfit(res)

# show result
res

# compute summary measures
summary(res, target=V)

}
