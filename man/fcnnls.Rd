% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithms-snmf.R
\name{fcnnls}
\alias{fcnnls}
\title{Fast Combinatorial Nonnegative Least-Square}
\usage{
fcnnls(x, y, ...)
}
\arguments{
\item{x}{the coefficient matrix}

\item{y}{the target matrix to be approximated by \eqn{X K}.}

\item{...}{extra arguments passed to the internal function \code{.fcnnls}.
Currently not used.}
}
\value{
A list containing the following components:

\item{x}{ the estimated optimal matrix \eqn{K}.} \item{fitted}{ the fitted
matrix \eqn{X K}.} \item{residuals}{ the residual matrix \eqn{Y - X K}.}
\item{deviance}{ the residual sum of squares between the fitted matrix
\eqn{X K} and the target matrix \eqn{Y}. That is the sum of the square
residuals.} \item{passive}{ a \eqn{r x p} logical matrix containing the
passive set, that is the set of entries in \eqn{K} that are not null (i.e.
strictly positive).} \item{pseudo}{ a logical that is \code{TRUE} if the
computation was performed using the pseudoinverse. See argument
\code{pseudo}.}
}
\description{
This function solves the following nonnegative least square linear problem
using normal equations and the fast combinatorial strategy from \cite{VanBenthem2004}:
}
\details{
\deqn{
 \begin{array}{l}
 \min \|Y - X K\|_F\\
 \mbox{s.t. } K>=0
 \end{array}
}{min ||Y - X K||_F, s.t. K>=0}

where \eqn{Y} and \eqn{X} are two real matrices of dimension \eqn{n \times p}{n x p} 
and \eqn{n \times r}{n x r} respectively, 
and \eqn{\|.\|_F}{|.|_F} is the Frobenius norm.

The algorithm is very fast compared to other approaches, as it is optimised 
for handling multiple right-hand sides.


Within the \code{NMF} package, this algorithm is used internally by the
SNMF/R(L) algorithm from \cite{KimH2007} to solve general Nonnegative
Matrix Factorization (NMF) problems, using alternating nonnegative
constrained least-squares. 
That is by iteratively and alternatively estimate each matrix factor.

The algorithm is an active/passive set method, which rearrange the 
right-hand side to reduce the number of pseudo-inverse calculations.  
It uses the unconstrained solution \eqn{K_u} obtained from the 
unconstrained least squares problem,
i.e. \eqn{\min \|Y - X K\|_F^2}{min ||Y - X K||_F^2} , so as to determine
the initial passive sets.
 
The function \code{fcnnls} is provided separately so that it can be 
used to solve other types of nonnegative least squares problem. 
For faster computation, when multiple nonnegative least square fits 
are needed, it is recommended to directly use the function \code{\link{.fcnnls}}.

The code of this function is a port from the original MATLAB code 
provided by \cite{KimH2007}.
}
\examples{

## Define a random nonnegative matrix matrix
n <- 200; p <- 20; r <- 3
V <- rmatrix(n, p)

## Compute the optimal matrix K for a given X matrix
X <- rmatrix(n, r)
res <- fcnnls(X, V)

## Compute the same thing using the Moore-Penrose generalized pseudoinverse
res <- fcnnls(X, V, pseudo=TRUE)

## It also works in the case of single vectors
y <- runif(n)
res <- fcnnls(X, y)
# or
res <- fcnnls(X[,1], y)


}
\references{
Original MATLAB code from Van Benthem and Keenan, slightly modified by H.
Kim:\cr \url{http://www.cc.gatech.edu/~hpark/software/fcnnls.m}
}
\seealso{
\code{\link{nmf}}
}
\author{
Original MATLAB code : Van Benthem and Keenan

Adaption of MATLAB code for SNMF/R(L): H. Kim

Adaptation to the NMF package framework: Renaud Gaujoux
}
\keyword{multivariate}
\keyword{optimize}
\keyword{regression}
