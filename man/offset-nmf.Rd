% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithms-base.R
\name{nmf_update.euclidean_offset.h}
\alias{nmf_update.euclidean_offset.h}
\alias{nmf_update.euclidean_offset.w}
\alias{nmf_update.offset_R}
\alias{nmf_update.offset}
\alias{nmfAlgorithm.offset_R}
\alias{offset_R-nmf}
\alias{nmfAlgorithm.offset}
\title{NMF Multiplicative Update for NMF with Offset Models}
\usage{
nmf_update.euclidean_offset.h(v, w, h, offset, eps = 10^-9, copy = TRUE)

nmf_update.euclidean_offset.w(v, w, h, offset, eps = 10^-9, copy = TRUE)

nmf_update.offset_R(i, v, x, eps = 10^-9, ...)

nmf_update.offset(i, v, x, copy = FALSE, eps = 10^-9, ...)

nmfAlgorithm.offset_R(..., .stop = NULL, maxIter = nmf.getOption("maxIter")
  \%||\% 2000, eps = 10^-9, stopconv = 40, check.interval = 10)

nmfAlgorithm.offset(..., .stop = NULL, maxIter = nmf.getOption("maxIter")
  \%||\% 2000, copy = FALSE, eps = 10^-9, stopconv = 40,
  check.interval = 10)
}
\arguments{
\item{v}{target matrix.}

\item{w}{current basis matrix}

\item{h}{current coefficient matrix}

\item{offset}{current value of the offset/intercept vector.
It must be of length equal to the number of rows in the target matrix.}

\item{eps}{small numeric value used to ensure numeric stability, by shifting up
entries from zero to this fixed value.}

\item{copy}{logical that indicates if the update should be made on the original
matrix directly (\code{FALSE}) or on a copy (\code{TRUE} - default).
With \code{copy=FALSE} the memory footprint is very small, and some speed-up may be 
achieved in the case of big matrices.
However, greater care should be taken due the side effect. 
We recommend that only experienced users use \code{copy=TRUE}.}

\item{i}{current iteration number.}

\item{x}{current NMF model, as an \code{\linkS4class{NMF}} object.}

\item{...}{extra arguments. These are generally not used and present
only to allow other arguments from the main call to be passed to the 
initialisation and stopping criterion functions (slots \code{onInit} and 
\code{Stop} respectively).}

\item{.stop}{specification of a stopping criterion, that is used instead of the 
one associated to the NMF algorithm.
It may be specified as:
\itemize{
\item the access key of a registered stopping criterion;
\item a single integer that specifies the exact number of iterations to perform, which will 
be honoured unless a lower value is explicitly passed in argument \code{maxIter}.
\item a single numeric value that specifies the stationnarity threshold for the 
objective function, used in with \code{\link{nmf.stop.stationary}}; 
\item a function with signature \code{(object="NMFStrategy", i="integer", y="matrix", x="NMF", ...)}, 
where \code{object} is the \code{NMFStrategy} object that describes the algorithm being run, 
\code{i} is the current iteration, \code{y} is the target matrix and \code{x} is the current value of 
the NMF model.  
}}

\item{maxIter}{maximum number of iterations to perform.}

\item{stopconv}{number of iterations intervals over which the connectivity 
matrix must not change for stationarity to be achieved.}

\item{check.interval}{interval (in number of iterations) on which the stopping
criterion is computed.}
}
\value{
an \code{\linkS4class{NMFOffset}} model object.
}
\description{
These update rules proposed by \cite{Badea2008} are modified version of 
the updates from \cite{Lee2001}, that include an offset/intercept vector, 
which models a common baseline for each feature accross all samples: 
\deqn{V \approx W H + I}

\code{nmf_update.offset_R} implements a complete single update step, 
using plain R updates.

\code{nmf_update.offset} implements a complete single update step, 
using C++-optimised updates.

Algorithms \sQuote{offset} and \sQuote{.R#offset} provide the complete NMF-with-offset algorithm 
from \cite{Badea2008}, using the C++-optimised and pure R updates \code{\link{nmf_update.offset}} 
and \code{\link{nmf_update.offset_R}} respectively.
}
\details{
\code{nmf_update.euclidean_offset.h} and \code{nmf_update.euclidean_offset.w} 
compute the updated NMFOffset model, using the optimized \emph{C++} implementations.


The associated model is defined as an \code{\linkS4class{NMFOffset}} object. 
The details of the multiplicative updates can be found in \cite{Badea2008}.
Note that the updates are the ones defined for a single datasets, not the 
simultaneous NMF model, which is fit by algorithm \sQuote{siNMF} from 
formula-based NMF models.
}
\author{
Original update definition: Liviu Badea

Port to R and optimisation in C++: Renaud Gaujoux
}
